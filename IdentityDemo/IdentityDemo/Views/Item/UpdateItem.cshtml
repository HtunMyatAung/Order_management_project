@model IdentityDemo.Models.ItemModel
@{
    Layout = "_Owner_layout";
}


<div class="container" style="padding-top: 70px;">
    <div class="row justify-content-center">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header text-center">
                    <h2>Item Update</h2>
                </div>
                <div class="card-body">
                    <form asp-action="UpdateItem" asp-controller="Item" method="post">
                        <input type="hidden" asp-for="ItemId" />
                        <div class="form-group">
                            <label asp-for="ItemName">Name</label>
                            <input type="text" class="form-control" asp-for="ItemName" placeholder="Enter item name" id="nameInput" />
                            <span asp-validation-for="ItemName" class="text-danger" id="nameValidationMessage"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="ItemPrice">Price</label>
                            <input type="number" step="0.01" class="form-control" asp-for="ItemPrice" placeholder="Enter item price" id="priceInput" />
                            <span asp-validation-for="ItemPrice" class="text-danger" id="priceValidationMessage"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="ItemQuantity">Quantity</label>
                            <input type="number" class="form-control" asp-for="ItemQuantity" placeholder="Enter item quantity" id="quantityInput" />
                            <span asp-validation-for="ItemQuantity" class="text-danger" id="quantityValidationMessage"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="Discount_price">Discount by Price</label>
                            <input type="number" class="form-control" asp-for="Discount_price" placeholder="Enter discount price" id="discountpriceInput" />
                            <span asp-validation-for="Discount_price" class="text-danger" id="discountpriceValidationMessage"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="Discount_rate">Discount Rate</label>
                            <input type="number" class="form-control" asp-for="Discount_rate" placeholder="Enter discount rate" id="discountrateInput" />
                            <span asp-validation-for="Discount_rate" class="text-danger" id="discountrateValidationMessage"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="ItemChangedPrice">Final price</label>
                            <input type="number" step="0.01" class="form-control" asp-for="ItemChangedPrice" readonly id="finalPriceInput" />
                            <span asp-validation-for="ItemChangedPrice" class="text-danger"></span>
                        </div>
                        <div class="text-right">
                            <button type="submit" class="btn btn-primary w-25" id="submitButton">Save</button>
                            <a href="@Url.Action("Owner_Item_List", "Shop")" class="btn btn-secondary w-25">Cancel</a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="~/js/itemvalidate.js"></script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const priceInput = document.getElementById("priceInput");
        const discountPriceInput = document.getElementById("discountpriceInput");
        const discountRateInput = document.getElementById("discountrateInput");
        const finalPriceInput = document.getElementById("finalPriceInput");

        function calculateFinalPrice() {
            const price = parseFloat(priceInput.value) || 0;
            let discountPrice = parseFloat(discountPriceInput.value) || 0;
            let discountRate = parseFloat(discountRateInput.value) || 0;

            let finalPrice = price;

            if (discountRate > 0) {
                discountPriceInput.value = 0;
                finalPrice = price - (price * (discountRate / 100));
            } 
            if (discountPrice > 0) {
                discountRateInput.value = 0;
                finalPrice = price - discountPrice;
            }

            finalPriceInput.value = finalPrice.toFixed(2);
        }

        discountPriceInput.addEventListener("input", calculateFinalPrice);
        discountRateInput.addEventListener("input", calculateFinalPrice);
        priceInput.addEventListener("input", calculateFinalPrice);
    });
</script>




